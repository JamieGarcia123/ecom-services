var f=Object.defineProperty;var p=(r,e,s)=>e in r?f(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var l=(r,e,s)=>p(r,typeof e!="symbol"?e+"":e,s);import{p as i,L as m}from"./chunk-EF7DTUVF-DFp-VzBN.js";import{s as t}from"./supabaseDataManager-CPgVSS-r.js";function j({item:r}){return i.jsxs("div",{className:"bg-white shadow-md rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300",children:[i.jsx("div",{className:"h-48 bg-gray-200 flex items-center justify-center",children:r.image?i.jsx("img",{src:r.image,alt:r.name,className:"object-cover w-full h-full"}):i.jsx("span",{className:"text-gray-400 text-sm",children:"No Image"})}),i.jsxs("div",{className:"p-4",children:[i.jsx("h3",{className:"text-lg font-semibold text-gray-900 mb-2 line-clamp-2",children:r.name}),i.jsx("p",{className:"text-gray-600 text-sm mb-3 line-clamp-3",children:r.description}),i.jsx("div",{className:"flex items-center justify-between mb-4",children:i.jsxs("span",{className:"text-2xl font-bold text-green-600",children:["$",r.price.toFixed(2)]})}),i.jsx("div",{className:"flex space-x-2",children:i.jsx(m,{to:`/service/${r.id}`,className:"flex-1 bg-gray-100 hover:bg-gray-200 text-gray-800 text-center py-2 px-4 rounded-md text-sm font-medium transition-colors",children:"View Details"})})]})]})}async function c(r){try{const e=typeof window<"u"&&window.location.hostname==="localhost"?"":"/ecom-services",s=await fetch(`${e}/data/${r}.json`);if(!s.ok)throw new Error(`Failed to load ${r}`);return await s.json()}catch(e){return console.error(`Error loading ${r}:`,e),{}}}async function g(r,e){try{return(await fetch(`/api/data/${r}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).ok}catch(s){return console.error(`Error saving ${r}:`,s),!1}}const n=class n{constructor(){l(this,"data",{services:[],categories:[],providers:[]})}static getInstance(){return n.instance||(n.instance=new n),n.instance}async initialize(){if(t.isConfigured())try{const[o,u]=await Promise.all([t.getAllServices(),t.getAllCategories()]),h=await c("providers");this.data={services:o||[],categories:u||[],providers:h||[]};return}catch(o){console.warn("Supabase failed, falling back to JSON:",o)}const[e,s,a]=await Promise.all([c("services"),c("categories"),c("providers")]),d=s?s.map(o=>o.name):[];this.data={services:e||[],categories:d,providers:a||[]}}async getAllServices(){return t.isConfigured()?await t.getAllServices():this.data.services}async getServiceById(e){return t.isConfigured()?await t.getServiceById(e)||void 0:this.data.services.find(s=>s.id===e)}async addService(e){if(t.isConfigured())return await t.addService(e);throw new Error("Service addition requires Supabase configuration")}getServicesByCategory(e){return this.data.services.filter(s=>s.description.toLowerCase().includes(e.toLowerCase()))}async updateService(e,s){if(t.isConfigured())return await t.updateService(e,s);const a=this.data.services.findIndex(d=>d.id===e);return a===-1?null:(this.data.services[a]={...this.data.services[a],...s},await g("services",this.data.services),this.data.services[a])}async deleteService(e){if(t.isConfigured())return await t.deleteService(e);const s=this.data.services.findIndex(a=>a.id===e);return s===-1?!1:(this.data.services.splice(s,1),await g("services",this.data.services),!0)}getAllProviders(){return this.data.providers}getProviderById(e){return this.data.providers.find(s=>s.id===e)}async getAllCategories(){return t.isConfigured()?await t.getAllCategories():this.data.categories}};l(n,"instance");let v=n;const S=v.getInstance();export{j as I,S as d};
